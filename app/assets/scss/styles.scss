@import url('https://fonts.googleapis.com/css?family=Roboto:300,500');
@import "../../../node_modules/foundation-sites/scss/foundation";
@import "modularscale";
@import "vars";
@import "plugins";

@include foundation-everything(true);

body {
    background: $bodybg;
    color: $bodycolor;
    font-family: $bodyfont;
    font-weight: 300;
    padding-bottom: $padding * 2;
}


.fade.ng-enter {
  transition:0.2s linear left, 0.5s linear opacity;
  opacity:0;
  left: -5px;
  position: relative;
}

/* The finishing CSS styles for the enter animation */
.fade.ng-enter.ng-enter-active {
  opacity:1;
  left: 0;
}

a{
    color: $linkcolor;
    font-weight: 500;
    transition: color ease-in-out .2s;
    position: relative;
    display: inline-block;
    &::after{
        content: "";
        border-bottom: 4px solid $linkcolor;
        width:0;
        height: 100%;
        position: absolute;
        top:0;
        left: 0;
        padding: $padding 0;
        transition: width ease-in-out .2s;
    }
        &:hover {
            color: darken($linkcolor,20%);

        @include breakpoint(large up) {
            &::after{
                width: 100%;
            }
        }
    }
    &.text-color{
        color: $bodycolor;
        @include breakpoint(medium up) {
            &:hover {
                color: $linkcolor;
            }
        }
        &.active {
            color: $linkcolor;
            &::after{
                width: 100%;
            }
        }
    }

    &:active, &:focus{
        color: $linkcolor;
         &::after{
            width: 100%;
        }
        outline: none;
    }

    &.no-underline {
        &::after{
            display: none;
        }
    }
}

.column-text {
    @include breakpoint(large up) {
        column-count: 2;
    }
}

.text-upper{
    text-transform: uppercase;
}

.marginless{
    margin: 0;
}

.listless{
    list-style-type:none;
    margin-left: 0;
}

.tool-list{
    li{
        color: $linkcolor;
        border-bottom: 1px solid $linkcolor;
    }
}

nav{

    li{
        display: inline;
        padding: 0 $padding;
    }
}

h1 {
    font-family: $bodyfont;
    font-weight: 300;
    font-size: ms(1.5);
}

header{
    margin-bottom: ($padding * 2);
    @include breakpoint(medium up) {
        margin-bottom: ($padding * 5);
    }
    padding: $padding 0;
}

.logo{
    padding:($padding * 2) 0;
    text-align:center;
    display:inline-block;
    line-height:1;
    z-index:2;
    position:relative;

    path {
        transtion: color ease-in-out .3s;
    }

    &:hover{
        path {
            fill: $linkcolor;
        }
    }
}

.circle{
    border-radius: 100%;
}

//http://daverupert.com/2015/12/intrinsic-placeholders-with-picture/
.intrinsic {

  // Make sure <picture> wrapper is set to block
  // Max-width is governed by parentNode
  display: block;

  // Intrinsic Ratio Box
  position: relative;
  height: 0;
  width: 100%;
  padding-top: 100%; // Default to square

  // Custom Styling
  background: #f0f0f0;

  // Add as many ratios as you'd like...
  &.intrinsic--square {
    padding-top: 100%;
  }

  &.intrinsic--4x3 {
    padding-top: 75%;
  }

  &.intrinsic--16x9 {
    padding-top: 56.25%;
  }

  // Force the item to fill the intrinsic box
  .intrinsic-item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.work-item{
    position: relative;
    display: block;

    margin-bottom: $padding;
    .overlay {
        opacity: 0;
        transition: opacity ease-in-out .3s;
        background: rgba(red($linkcolor),green($linkcolor),blue($linkcolor),0.75);
        color: $white;
        position:absolute;
        width: 100%;
        height: 100%;
        padding: $padding;
        display: block;
        top:0;
        left:0;

        
    }


    &:hover{
        .overlay{
            opacity: 1;
        }
    }
}